#! /bin/bash

### BEGIN INIT INFO
# Provides:		franklin
# Required-Start:	$network $remote_fs
# Required-Stop:	$network $remote_fs
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Server for RepRap 3-D printers
# Description:		Allow browser and python clients to control a 3-D printer
### END INIT INFO

# File for storing the pid.
NAME=franklin
DESC="Server for RepRap 3-D printers"
DAEMON=/usr/lib/franklin/start-franklin
PIDFILE=/run/franklin.pid
ARGS=(--quiet --make-pidfile --pidfile "$PIDFILE" --chuid _franklin:_franklin)
START_ARGS=("${ARGS[@]}" --background --oknodo --start --startas "$DAEMON")
STOP_ARGS=("${ARGS[@]}" --oknodo --stop)

if test ! -x "$DAEMON"; then
	echo "$DAEMON does not exist"
	exit 0
fi

. /lib/lsb/init-functions

#
# Start the daemon.
#
do_start()
{
	if [ ! -d /run/franklin ] ; then
		mkdir /run/franklin
		chown _franklin:_franklin /run/franklin
	fi
	start-stop-daemon "${START_ARGS[@]}"
	RETVAL="$?"
	if [ "$RETVAL" -eq 0 ]; then
		# It might be that the daemon is not started
		# (see start-stop-daemon --background for explanation)

		# Wait a little bit to allow the daemon to start
		sleep 1
		start-stop-daemon --status "${ARGS[@]}"
		RETVAL="$?"
		case "$RETVAL" in
			0) ;;
			*) RETVAL=1 ;;
		esac
	fi
	return "$RETVAL"
}

#
# Stop the daemon and clean up.
#
do_stop()
{
	start-stop-daemon "${STOP_ARGS[@]}"
	RETVAL="$?"
	[ "$RETVAL" -eq 0 ] && rm -f "$PIDFILE"
	return "$RETVAL"
}

case "$1" in
	start)
		log_daemon_msg "Starting $DESC" "$NAME"
		do_start
		log_end_msg $?
		;;
	stop)
		log_daemon_msg "Stopping $DESC" "$NAME"
		do_stop
		log_end_msg $?
		;;
	restart|force-reload)
		log_daemon_msg "Restarting $DESC" "$NAME"
		if do_stop; then
			do_start
			log_end_msg $?
		else
			log_end_msg $?
		fi
		;;
	status)
		status_of_proc "$NAME" "$DESC"
		;;
	*)
		log_success_msg "Usage: $0 {start|stop|restart|force-reload|status}"
		exit 1
		;;
esac

exit 0
